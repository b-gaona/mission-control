{"version":3,"sources":["history.js"],"names":["total","limit","page","async","getAllLaunches","res","fetch","json","getLaunches","sort","a","b","flightNumber","fillTable","launches","table","document","querySelector","forEach","launch","launchDate","Date","toLocaleDateString","year","month","day","tr","createElement","innerHTML","success","mission","rocket","customers","appendChild","updatePaginator","arrows","querySelectorAll","setAttribute","getAttribute","style","opacity","pointerEvents","Math","ceil","updatePage","evt","textContent","updateHTML","firstChild","remove","getRequest","length","addEventListener"],"mappings":"AAAA,IAEIA,MAFAC,MAAQ,GACRC,KAAO,EAQXC,eAAeC,iBACb,MAAMC,QAAYC,MAAM,qCACxB,aAAaD,EAAIE,OAGnBJ,eAAeK,cACb,MAAMH,QAAYC,MAChB,2CAA2CL,cAAcC,QAM3D,aAJuBG,EAAIE,QACKE,KAC9B,CAACC,EAAGC,IAAMD,EAAEE,aAAeD,EAAEC,cAKjC,SAASC,UAAUC,GACjB,MAAMC,EAAQC,SAASC,cAAc,SACrCH,EAASI,QAASC,IAChB,MAAMC,EAAa,IAAIC,KAAKF,EAAOC,YAAYE,mBAAmB,QAAS,CACzEC,KAAM,UACNC,MAAO,UACPC,IAAK,YAGDC,EAAKV,SAASW,cAAc,MAClCD,EAAGE,UAAY,6BAEXT,EAAOU,QAAU,QAAU,0EAEvBV,EAAOP,gCACPQ,qBACAD,EAAOW,2BACPX,EAAOY,0BACPZ,EAAOa,WAAa,gBAE5BjB,EAAMkB,YAAYP,KAItB,SAASQ,kBACP,MAAMC,EAASnB,SAASoB,iBAAiB,UACzCD,EAAO,GAAGE,aAAa,QAASnC,KAAO,GACvCiC,EAAO,GAAGE,aAAa,QAASnC,KAAO,GACnCiC,EAAO,GAAGG,aAAa,UAAY,GACrCH,EAAO,GAAGI,MAAMC,QAAU,EAC1BL,EAAO,GAAGI,MAAME,cAAgB,SAEhCN,EAAO,GAAGI,MAAMC,QAAU,EAC1BL,EAAO,GAAGI,MAAME,cAAgB,QAE9BN,EAAO,GAAGG,aAAa,UAAYI,KAAKC,KAAM3C,MAAMC,MAAQ,IAC9DkC,EAAO,GAAGI,MAAMC,QAAU,EAC1BL,EAAO,GAAGI,MAAME,cAAgB,SAEhCN,EAAO,GAAGI,MAAMC,QAAU,EAC1BL,EAAO,GAAGI,MAAME,cAAgB,QAIpCtC,eAAeyC,WAAWC,GACA,MAApBA,EAAIC,YACN5C,OAEAA,OAEFgC,kBACAa,aACAlC,gBAAgBL,eAGlB,SAASuC,aACP,MAAMhC,EAAQC,SAASC,cAAc,SACrC,KAAOF,EAAMiC,YACXjC,EAAMiC,WAAWC,SAKrB9C,eAAe+C,aAEbrC,gBADuBL,eAEvB0B,kBACAlC,aAAeI,kBAAkB+C,OAxFnCnC,SAASoC,iBAAiB,mBAAoBjD,gBACtC+C","file":"history.js","sourcesContent":["let limit = 15;\r\nlet page = 1;\r\nlet total;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n  await getRequest();\r\n});\r\n\r\n//Functions\r\nasync function getAllLaunches() {\r\n  const res = await fetch(`http://localhost:3000/v1/launches`);\r\n  return await res.json();\r\n}\r\n\r\nasync function getLaunches() {\r\n  const res = await fetch(\r\n    `http://localhost:3000/v1/launches?limit=${limit}&page=${page}`\r\n  );\r\n  const launches = await res.json();\r\n  const sortedLaunches = launches.sort(\r\n    (a, b) => a.flightNumber - b.flightNumber\r\n  );\r\n  return sortedLaunches;\r\n}\r\n\r\nfunction fillTable(launches) {\r\n  const table = document.querySelector(\"tbody\");\r\n  launches.forEach((launch) => {\r\n    const launchDate = new Date(launch.launchDate).toLocaleDateString(\"es-MX\", {\r\n      year: \"numeric\",\r\n      month: \"numeric\",\r\n      day: \"numeric\",\r\n    });\r\n\r\n    const tr = document.createElement(\"tr\");\r\n    tr.innerHTML = `\r\n      <td style=\"color: ${\r\n        launch.success ? \"green\" : \"red\"\r\n      }; cursor: pointer;\" onclick=\"abortLaunch(this)\">â–ˆ</td>\r\n      <td>${launch.flightNumber}</td>\r\n      <td>${launchDate}</td>\r\n      <td>${launch.mission}</td>\r\n      <td>${launch.rocket}</td>\r\n      <td>${launch.customers || \"\"}</td>\r\n    `;\r\n    table.appendChild(tr);\r\n  });\r\n}\r\n\r\nfunction updatePaginator() {\r\n  const arrows = document.querySelectorAll(\".arrow\");\r\n  arrows[0].setAttribute(\"value\", page - 1);\r\n  arrows[1].setAttribute(\"value\", page + 1);\r\n  if (arrows[0].getAttribute(\"value\") <= 0) {\r\n    arrows[0].style.opacity = 0;\r\n    arrows[0].style.pointerEvents = \"none\";\r\n  } else {\r\n    arrows[0].style.opacity = 1;\r\n    arrows[0].style.pointerEvents = \"auto\";\r\n  }\r\n  if (arrows[1].getAttribute(\"value\") >= Math.ceil((total/limit) +1)) {\r\n    arrows[1].style.opacity = 0;\r\n    arrows[1].style.pointerEvents = \"none\";\r\n  } else {\r\n    arrows[1].style.opacity = 1;\r\n    arrows[1].style.pointerEvents = \"auto\";\r\n  }\r\n}\r\n\r\nasync function updatePage(evt) {\r\n  if (evt.textContent === \">\") {\r\n    page++;\r\n  } else {\r\n    page--;\r\n  }\r\n  updatePaginator();\r\n  updateHTML();\r\n  fillTable(await getLaunches());\r\n}\r\n\r\nfunction updateHTML() {\r\n  const table = document.querySelector(\"tbody\");\r\n  while (table.firstChild) {\r\n    table.firstChild.remove();\r\n  }\r\n}\r\n\r\n//Requests\r\nasync function getRequest() {\r\n  const launches = await getLaunches();\r\n  fillTable(launches);\r\n  updatePaginator();\r\n  total = (await getAllLaunches()).length;\r\n}\r\n"]}